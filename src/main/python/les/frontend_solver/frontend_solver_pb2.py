# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)



DESCRIPTOR = descriptor.FileDescriptor(
  name='les/frontend_solver.proto',
  package='les',
  serialized_pb='\n\x19les/frontend_solver.proto\x12\x03les\"\x87\x06\n\x16OptimizationParameters\x12I\n\x16\x64\x65\x66\x61ult_backend_solver\x18\x01 \x01(\x0e\x32).les.OptimizationParameters.BackendSolver\x12M\n\x1arelaxation_backend_solvers\x18\x02 \x03(\x0e\x32).les.OptimizationParameters.BackendSolver\x12$\n\x18max_num_shared_variables\x18\x03 \x01(\x03:\x02\x31\x30\x12\x46\n\x08\x65xecutor\x18\x04 \x01(\x0e\x32$.les.OptimizationParameters.Executor:\x0e\x44UMMY_EXECUTOR\x12]\n\ndecomposer\x18\x05 \x01(\x0e\x32&.les.OptimizationParameters.Decomposer:!QUASIBLOCK_FINKELSTEIN_DECOMPOSER\x12X\n\x0esolution_table\x18\x06 \x01(\x0e\x32).les.OptimizationParameters.SolutionTable:\x15SQLITE_SOLUTION_TABLE\"z\n\rBackendSolver\x12\x07\n\x03\x43LP\x10\x00\x12\x10\n\x0c\x44UMMY_SOLVER\x10\x01\x12\x1e\n\x1a\x46RAKTIONAL_KNAPSACK_SOLVER\x10\x02\x12\x08\n\x04GLPK\x10\x03\x12\x0c\n\x08LP_SOLVE\x10\x04\x12\x08\n\x04SCIP\x10\x05\x12\x0c\n\x08SYMPHONY\x10\x06\"3\n\x08\x45xecutor\x12\x12\n\x0e\x44UMMY_EXECUTOR\x10\x00\x12\x13\n\x0fTHREAD_EXECUTOR\x10\x01\"O\n\nDecomposer\x12%\n!QUASIBLOCK_FINKELSTEIN_DECOMPOSER\x10\x01\x12\x1a\n\x16MAX_CLIQUES_DECOMPOSER\x10\x02\"*\n\rSolutionTable\x12\x19\n\x15SQLITE_SOLUTION_TABLE\x10\x01')



_OPTIMIZATIONPARAMETERS_BACKENDSOLVER = descriptor.EnumDescriptor(
  name='BackendSolver',
  full_name='les.OptimizationParameters.BackendSolver',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='CLP', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='DUMMY_SOLVER', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='FRAKTIONAL_KNAPSACK_SOLVER', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='GLPK', index=3, number=3,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='LP_SOLVE', index=4, number=4,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SCIP', index=5, number=5,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='SYMPHONY', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=510,
  serialized_end=632,
)

_OPTIMIZATIONPARAMETERS_EXECUTOR = descriptor.EnumDescriptor(
  name='Executor',
  full_name='les.OptimizationParameters.Executor',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='DUMMY_EXECUTOR', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='THREAD_EXECUTOR', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=634,
  serialized_end=685,
)

_OPTIMIZATIONPARAMETERS_DECOMPOSER = descriptor.EnumDescriptor(
  name='Decomposer',
  full_name='les.OptimizationParameters.Decomposer',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='QUASIBLOCK_FINKELSTEIN_DECOMPOSER', index=0, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='MAX_CLIQUES_DECOMPOSER', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=687,
  serialized_end=766,
)

_OPTIMIZATIONPARAMETERS_SOLUTIONTABLE = descriptor.EnumDescriptor(
  name='SolutionTable',
  full_name='les.OptimizationParameters.SolutionTable',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='SQLITE_SOLUTION_TABLE', index=0, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=768,
  serialized_end=810,
)


_OPTIMIZATIONPARAMETERS = descriptor.Descriptor(
  name='OptimizationParameters',
  full_name='les.OptimizationParameters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='default_backend_solver', full_name='les.OptimizationParameters.default_backend_solver', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='relaxation_backend_solvers', full_name='les.OptimizationParameters.relaxation_backend_solvers', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='max_num_shared_variables', full_name='les.OptimizationParameters.max_num_shared_variables', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=10,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='executor', full_name='les.OptimizationParameters.executor', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='decomposer', full_name='les.OptimizationParameters.decomposer', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='solution_table', full_name='les.OptimizationParameters.solution_table', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPTIMIZATIONPARAMETERS_BACKENDSOLVER,
    _OPTIMIZATIONPARAMETERS_EXECUTOR,
    _OPTIMIZATIONPARAMETERS_DECOMPOSER,
    _OPTIMIZATIONPARAMETERS_SOLUTIONTABLE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=35,
  serialized_end=810,
)

_OPTIMIZATIONPARAMETERS.fields_by_name['default_backend_solver'].enum_type = _OPTIMIZATIONPARAMETERS_BACKENDSOLVER
_OPTIMIZATIONPARAMETERS.fields_by_name['relaxation_backend_solvers'].enum_type = _OPTIMIZATIONPARAMETERS_BACKENDSOLVER
_OPTIMIZATIONPARAMETERS.fields_by_name['executor'].enum_type = _OPTIMIZATIONPARAMETERS_EXECUTOR
_OPTIMIZATIONPARAMETERS.fields_by_name['decomposer'].enum_type = _OPTIMIZATIONPARAMETERS_DECOMPOSER
_OPTIMIZATIONPARAMETERS.fields_by_name['solution_table'].enum_type = _OPTIMIZATIONPARAMETERS_SOLUTIONTABLE
_OPTIMIZATIONPARAMETERS_BACKENDSOLVER.containing_type = _OPTIMIZATIONPARAMETERS;
_OPTIMIZATIONPARAMETERS_EXECUTOR.containing_type = _OPTIMIZATIONPARAMETERS;
_OPTIMIZATIONPARAMETERS_DECOMPOSER.containing_type = _OPTIMIZATIONPARAMETERS;
_OPTIMIZATIONPARAMETERS_SOLUTIONTABLE.containing_type = _OPTIMIZATIONPARAMETERS;
DESCRIPTOR.message_types_by_name['OptimizationParameters'] = _OPTIMIZATIONPARAMETERS

class OptimizationParameters(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OPTIMIZATIONPARAMETERS
  
  # @@protoc_insertion_point(class_scope:les.OptimizationParameters)

# @@protoc_insertion_point(module_scope)
